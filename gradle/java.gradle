import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact
import org.gradle.api.internal.java.JavaLibrary

configure(javaProjects) {
    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7


    // These will only run when we execute the "publish" task, NOT "assemble".
    // That'll save us from a lot of unnecessary build time in the common case.
    task sourcesJar(type: Jar, dependsOn: classes, group: 'Publishing') {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc, group: 'Publishing') {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }


    // Add sources and javadoc jars to the set of components that will be published for each project.
    JavaLibrary java = components.java
    Set<PublishArtifact> componentArtifacts = java.usages.first().artifacts

    componentArtifacts << new DefaultPublishArtifact(tasks.sourcesJar.archiveName, 'jar', 'jar', 'sources', null,
                                                     tasks.sourcesJar.archivePath, tasks.sourcesJar)

    componentArtifacts << new DefaultPublishArtifact(tasks.javadocJar.archiveName, 'jar', 'jar', 'javadoc', null,
                                                     tasks.javadocJar.archivePath, tasks.javadocJar)


    // Will apply to "compileJava", "compileTestJava", "compileSourceSetJava", etc.
    tasks.withType(JavaCompile).all {
        options.encoding = 'UTF-8'

        // Disable warnings about cross-compilation:
        // http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html#BHCIJIEG
        // This is usually fine, but see: http://www.draconianoverlord.com/2014/04/01/jdk-compatibility.html
        // To be safe, we should make sure that our production releases are built
        // on a machine running the same version of the JVM as our project language level.
        options.compilerArgs = ['-Xlint:-options']
    }

    tasks.withType(Javadoc).all {
        options.encoding = 'UTF-8'

        if (JavaVersion.current().isJava8Compatible()) {
            // See http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
