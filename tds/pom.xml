<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>edu.ucar</groupId>
    <artifactId>thredds-parent</artifactId>
    <version>4.6.1-SNAPSHOT</version>
  </parent>


  <!-- ===========================================================
           Module Description
       =========================================================== -->
  <artifactId>tds</artifactId>
  <packaging>war</packaging>
  <name>THREDDS Data Server (TDS)</name>
  <description>
    The THREDDS Data Server (TDS) is a web server that provides catalog and
    data access services for scientific data using OPeNDAP, OGC WCS and WMS,
    HTTP, and other remote data access protocols scientific data.
    (The tests rely on having access to cdmUnitTest directory, so can only be run at Unidata)
  </description>
  <url>http://www.unidata.ucar.edu/software/tds/</url>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cdm</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>clcommon</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>grib</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>httpservices</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>netcdf4</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>opendap</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>tdcommon</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>visadCdm</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>waterml</artifactId>
    </dependency>

    <!-- DAP4 Dependencies (technically forward) -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>d4core</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>d4servletshared</artifactId>
    </dependency>

    <dependency>
        <groupId>com.coverity.security</groupId>
        <artifactId>coverity-escapers</artifactId>
    </dependency>

    <!-- Apache httpclient libraries -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>

    <dependency>
      <groupId>org.n52.sensorweb</groupId>
      <artifactId>52n-xml-waterML-v20</artifactId>
    </dependency>

    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <!-- need to update cas -->
    <!-- dependency>
      <groupId>org.jasig.cas</groupId>
     	<artifactId>cas-client-core</artifactId>
    </dependency -->

    <!-- THREDDS ISO -->
    <dependency>
      <groupId>EDS</groupId>
      <artifactId>threddsIso</artifactId>
    </dependency>

    <!-- wms -->
    <dependency>
      <groupId>uk.ac.rdg.resc</groupId>
      <artifactId>ncwms</artifactId>
    </dependency>

    <dependency>
      <groupId>org.opengis</groupId>
      <artifactId>geoapi-pending</artifactId>
    </dependency>

    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>

    <!-- JSR 303 with Hibernate Validator -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- Needed for XPath operations in NcssShowDatasetInfoImpl.addElement() -->
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
    </dependency>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Testing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
    </dependency>

    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cdm</artifactId>
      <type>test-jar</type>
    </dependency>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
  </dependencies>

  <!-- ===========================================================
           Build configuration
       =========================================================== -->
  <build>
    <finalName>thredds</finalName>

    <!-- BINARY FILES MUST NEVER EVER EVER EVER BE FILTERED -->
    <testResources>
       <testResource>
         <filtering>false</filtering>
         <directory>${basedir}/src/test/resources</directory>
       </testResource>
       <testResource>
         <filtering>false</filtering>
         <directory>${basedir}/src/main/webapp</directory>
       </testResource>
     </testResources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <skip>${skipTests}</skip>
          <excludes>
            <exclude>thredds/cataloggen/**</exclude>
          </excludes>
          <testExcludes>
            <exclude>thredds/dqc/**/*.java</exclude>
          </testExcludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <attachClasses>true</attachClasses>
           <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-On>${maven.build.timestamp}</Built-On>
            </manifestEntries>
          </archive>
          <webResources>
            <resource>
              <targetPath>WEB-INF/classes</targetPath>
              <filtering>true</filtering>
              <directory>${basedir}/src/main/template</directory>
              <includes>
                <include>**/tds.properties</include>
              </includes>
            </resource>
            <resource>
              <targetPath>docs</targetPath>
              <filtering>true</filtering>
              <directory>${basedir}</directory>
              <includes>
                <include>README.txt</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>/thredds/tds/**</exclude>
          </excludes>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/src/main/webapp</additionalClasspathElement>
            <additionalClasspathElement>${basedir}/src/main/webapp/WEB-INF/classes</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>

      <!-- plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>${skipTests}</skip>
        </configuration>
      </plugin -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>release</id>
            <phase>deploy</phase>
            <configuration>
              <tasks>
                <property name="ftp.dir" value="V:/pub/thredds/v4.3/4.3.11" />
                <echo message="ftp.dir: ${ftp.dir}" />

                <copy todir="${ftp.dir}" overwrite="true">
                  <fileset dir="./target" includes="thredds.war" />
                  <fileset dir="." includes="CHANGES.txt" />
                </copy>

                <checksum>
                  <fileset dir="${ftp.dir}">
                    <include name="*.war" />
                  </fileset>
                </checksum>

              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->
    </plugins>
  </build>
</project>
