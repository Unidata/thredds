description = "The THREDDS Data Server (TDS) is a web server that provides catalog and data access services for " +
        "scientific data using OPeNDAP, OGC WCS and WMS, HTTP, and other remote-data-access protocols."
ext.title = "THREDDS Data Server (TDS)"
ext.url = "http://www.unidata.ucar.edu/software/thredds/current/tds/TDS.html"

apply plugin: 'war'

dependencies {
    compile project(":bufr")
    compile project(":cdm")
    compile project(":clcommon")
    compile project(":grib")
    compile project(":netcdf4")
    compile project(":opendap")
    compile project(":tdcommon")
    runtime project(":visadCdm")
    compile project(":waterml")

    // DAP4 Dependencies (technically forward)
    compile project(":dap4:d4core")
    compile project(":dap4:d4servletshared")
    compile project(":dap4:d4cdm")

    // Server stuff
    provided libraries["javax.servlet-api"]
    runtime libraries["jstl-api"]
    runtime libraries["jstl-impl"]

    // Apache httpclient libraries
    compile libraries["httpclient"]
    compile libraries["httpcore"]

    compile libraries["coverity-escapers"]
    // compile libraries["commons-fileupload"]
    compile libraries["jdom2"]
    compile libraries["quartz"]
    // compile libraries["commons-lang3"]
    // compile libraries["commons-io"]
    compile libraries["jcip-annotations"]
    compile libraries["guava"]
    compile libraries["joda-time"]
    compile libraries["52n-xml-waterML-v20"]

    // Spring
    compile libraries["spring-core"]
    compile libraries["spring-context"]
    compile libraries["spring-beans"]
    compile libraries["spring-web"]
    compile libraries["spring-webmvc"]

    // Spring security
    runtime libraries["spring-security-core"]
    runtime libraries["spring-security-config"]
    runtime libraries["spring-security-web"]

    // Need to update cas
    // compile "org.jasig.cas:cas-client-core:________"

    // runtime libraries["threddsIso"]
    // compile libraries["ncwms"]
    // compile libraries["geoapi-pending"]
    // compile libraries["oro"]

    // Needed for XPath operations in mock tests
    testCompile libraries["jaxen"]

    // JSR 303 with Hibernate Validator, which is dragging in jboss logging
    compile libraries["validation-api"]
    runtime libraries["hibernate-validator"]
    testCompile libraries["javax.el-api"]
    testCompile libraries["javax.el"]

    compile "org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE"

    // Testing
    testCompile libraries["spring-test"]
    testCompile libraries["hamcrest-core"]
    testCompile libraries["httpunit"]

    // Logging
    compile libraries["slf4j-api"]
    runtime libraries["log4j-slf4j-impl"]
    runtime libraries["log4j-core"]
    runtime libraries["log4j-web"]
}

// Adds ':tds:prepareInplaceWebAppClasses', which ':it:integrationTest' depends on.
apply plugin: 'org.akhikhl.gretty'

//test {
    // From TDS's pom.xml. I guess these are excluded because they're pretty crufty?
//    exclude 'thredds/tds/**'
//}

// Tests expect for test resources to be copied to the same directory as the test classes.
processTestResources.destinationDir = compileTestJava.destinationDir

processTestResources {
    from "src/main/webapp"
    from "src/main/webapp/WEB-INF/classes"
}

war {
    // Exclude tds.properties from the War CopySpec. We'll re-add it below, with filtering.
    // TODO: Is there a less-awkward way to filter a single file when it's already part of a CopySpec?
    exclude 'WEB-INF/classes/thredds/server/tds.properties'  // Relative to src/main/webapp/

    // This is a hack to handle Maven-style placeholders in a file to be filtered: http://goo.gl/9sQebt
    // Once Maven is out of the picture, the easiest way to refactor this is to remove the dots from the property
    // keys, so that expand(Map) works as expected.
    ant.properties['project.version'] = project.version
    ant.properties['build.timestamp'] = project.buildTimestamp  // Defined in root project.

    from ('src/main/webapp/WEB-INF/classes/thredds/server/tds.properties') {
        into 'WEB-INF/classes/thredds/server'
        filter(org.apache.tools.ant.filters.ExpandProperties, project: ant.project)
    }
    from('README.txt') {
        into 'docs'
        filter(org.apache.tools.ant.filters.ExpandProperties, project: ant.project)
    }
}
