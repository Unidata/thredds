description = "The NetCDF-Java Library is a Java interface to NetCDF files, as well as to many other types of " +
        "scientific data formats."
ext.title = "CDM core library"

apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/java.gradle"
apply from: "$rootDir/gradle/any/testing.gradle"
apply from: "$rootDir/gradle/any/coverage.gradle"
apply from: "$rootDir/gradle/any/archiving.gradle"
apply from: "$rootDir/gradle/any/publishing.gradle"

apply plugin: 'groovy'  // For Spock tests.

dependencies {
    compile project(':udunits')
    compile project(':httpservices')

    compile libraries["joda-time"]
    compile libraries["jdom2"]
    compile libraries["jsr305"]
    compile libraries["protobuf-java"]
    compile libraries["guava"]
    compile libraries["jcommander"]
    compile libraries["httpcore"]

    compile libraries["jsr305"]  // Nonnull

    compile libraries["slf4j-api"]

    // These are for Spock.
    testCompile libraries["groovy-all"]
    testCompile libraries["spock-core"]

    testCompile libraries["commons-io"]
}

javadoc {
    title = 'Public javadoc for netcdf-java version ' + version
    source = fileTree(dir: 'src/main/java').matching {
        include 'thredds/client/catalog/*.java'
        include 'ucar/ma2/*.java'
        include 'ucar/nc2/*.java'
        include 'ucar/nc2/constants/*.java'
        include 'ucar/nc2/dataset/**/*.java'
        include 'ucar/nc2/dt/radial/*.java'
        include 'ucar/nc2/ft/*.java'
        include 'ucar/nc2/ft2/*.java'
        include 'ucar/nc2/ncml/*.java'
        include 'ucar/nc2/time/*.java'
        include 'ucar/nc2/units/*.java'
        include 'ucar/nc2/util/*.java'
        include 'ucar/unidata/**/*.java'
    }
}

// TODO: Use the Sync task for this.
task releaseDocs(dependsOn: javadoc, group: 'Release') {
    doLast {
        String releaseDir = new File(webdir, "javadoc").absolutePath
    
        ant.delete(dir: releaseDir)
        ant.mkdir(dir: releaseDir)
    
        copy {
            println "copyDocs to " + releaseDir
            from("build/docs/javadoc")
            into releaseDir
        }
    }
}

jar.manifest.attributes 'Main-Class': 'ucar.nc2.NCdumpW'
