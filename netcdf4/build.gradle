description = "An IOSP for NetCDF-4 that loads the C library to read and write files."
ext.title = "NetCDF-4 IOSP"
ext.url = "https://www.unidata.ucar.edu/software/netcdf/"

apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/java.gradle"
apply from: "$rootDir/gradle/any/testing.gradle"
apply from: "$rootDir/gradle/any/coverage.gradle"
apply from: "$rootDir/gradle/any/archiving.gradle"
apply from: "$rootDir/gradle/any/publishing.gradle"

apply plugin: 'groovy'  // For Spock tests.

dependencies {
    compile project(':cdm')
    compile libraries["jna"]
    compile libraries["slf4j-api"]
    
    // These are for Spock.
    testCompile libraries["groovy-all"]
    testCompile libraries["spock-core"]
}

// Most of the tests in this subproject require that the native C library be loaded. However, there are a handful
// of tests for which it must NOT be loaded. It's tricky for a single Gradle executor to handle both kinds of tests
// because once Java loads a native library, it remains loaded for the duration of the process. So, we must separate
// the tests (using SourceSets) and run them in different tasks.

sourceSets {
    unloadedTest {
        groovy.srcDir file('src/unloadedTest/groovy')
        resources.srcDir file('src/unloadedTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testCompile
        runtimeClasspath += output + sourceSets.main.output + configurations.testRuntime
    }
}

task unloadedTest(type: Test, group: "verification") {
    description = 'Runs tests without the native C library loaded.'
    testClassesDir = sourceSets.unloadedTest.output.classesDir
    classpath = sourceSets.unloadedTest.runtimeClasspath
    mustRunAfter tasks.test
}

check.dependsOn tasks.unloadedTest

jacocoTestReport {
    // The jacoco plugin adds the "jacocoTestReport" task and it only reports on "test" by default.
    // Here we add "unloadedTest" to that report as well. We could create a separate JacocoReport task for
    // "unloadedTest", but meh. The report will be saved at "netcdf4/build/reports/jacoco/test/html/index.html".
    executionData tasks.unloadedTest
}
