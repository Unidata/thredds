apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/java.gradle"
// d4ts has no tests
// d4ts is not published
apply from: "$rootDir/gradle/any/gretty.gradle"

apply plugin: 'war'

dependencies {
    compile project(':dap4:d4core')
    compile project(':dap4:d4lib')
    compile project(':dap4:d4servlet')
    compileOnly libraries["javax.servlet-api"]
    compile libraries["slf4j-api"]
    runtime libraries["log4j-slf4j-impl"]
    runtime libraries["log4j-core"]
    runtime libraries["log4j-web"]
}

// This specifies the resources from ":dap4:d4tests" that we need to include in the d4ts war and inplaceWebapp.
def d4testsResourcesCopySpec = copySpec {
    File d4testsResourcesDir = project(":dap4:d4tests").file('src/test/data/resources')
    
    from (new File(d4testsResourcesDir, 'favicon.ico')) {
        into('WEB-INF/')
    }
    from (new File(d4testsResourcesDir, "testfiles/")) {
        into('WEB-INF/resources/testfiles/')
        include('*.syn')
        include('*.nc')
        include('*.hdf5')
        include('*.raw')
    }
    /* ignore for now
    from(new File(d4testsResourcesDir, "testfiles/dmr/")) {
        into('WEB-INF/resources/testfiles/dmr/')
        include('*.dmr')
    }
    */
}

war.with d4testsResourcesCopySpec

// This will be used by both :d4ts and :d4tests.
ext.grettyConfig = {
    httpPort = 8083
    contextPath = '/d4ts'
    
    afterEvaluate {
        prepareInplaceWebAppFolder.with d4testsResourcesCopySpec
    }
}

gretty grettyConfig
