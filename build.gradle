// The buildscript {} block is evaluated before anything else in the script (regardless of location in file).
// See http://goo.gl/EO8S1k. So, might as well put it first.
//
// Due to a Gradle limitation, we cannot externalize this buildscript block into a script plugin. However, we can
// exploit the fact that dependencies specified in a parent's buildscript block are visible to all children.
// Thus, as long as we declare all plugins here, no child needs its own buildscript block. See http://goo.gl/2y3KhZ.
buildscript {
    // Add the "libraries" ExtraProperty. It should be usable from the rest of this script as well.
    // See http://goo.gl/9bixNV
    apply from: "$rootDir/gradle/any/dependencies.gradle"
    
    // The buildscript {} block is odd: even though we applied dependencies.gradle above, the repositories therein
    // do not get included here. Instead, we must explicitly define the repos again. Yay for duplication.
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"  // For Gradle plugins.
        }
        maven {
            url "https://dl.bintray.com/cwardgar/maven/"  // For 'com.cwardgar.gretty-fork:gretty'.
        }
    }
    
    dependencies {
        classpath libraries["gretty"]
        classpath libraries["shadow"]
        classpath libraries["coveralls-gradle-plugin"]
        classpath libraries["gradle-extra-configurations-plugin"]
        classpath libraries["sonarqube-gradle-plugin"]
        classpath libraries["license-gradle-plugin"]
    }
}

allprojects {
    // Matches Maven's "project.groupId". Used in MANIFEST.MF for "Implementation-Vendor-Id".
    group = "edu.ucar"
    // Matches Maven's "project.version". Used in MANIFEST.MF for "Implementation-Version".
    version = '5.0.0-SNAPSHOT'
    // Eventually, we'll stop appending "SNAPSHOT" to our versions and just use this.
    status = 'development'
}

// Matches Maven's "project.description".
description = "The Unidata THREDDS project includes the netCDF-Java library (aka CDM) " +
        "and the THREDDS Data Server (TDS)."

import java.text.SimpleDateFormat

// These will be inherited by subprojects: http://goo.gl/5mvqf7
// After declaration, they should NOT be referred to using the "ext" namespace, instead preferring e.g.
// "project.title" or simply "title": http://stackoverflow.com/questions/14530901
// That way, the property will be robustly resolved, as described here: http://goo.gl/UBq0en
// Otherwise, only the one specific ExtraPropertiesExtension will be searched.
ext {
    // Matches Maven's "project.name". Used in MANIFEST.MF for "Implementation-Title".
    title = "Parent THREDDS and CDM modules"

    // Matches Maven's "project.organization.name". Used in MANIFEST.MF for "Implementation-Vendor".
    vendor = "UCAR/Unidata"

    // Matches Maven's "project.url". Used in MANIFEST.MF for "Implementation-URL".
    url = "http://www.unidata.ucar.edu/software/thredds/current/netcdf-java/documentation.htm"

    SimpleDateFormat iso_8601_format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ")
    buildTimestamp = iso_8601_format.format(new Date())
}

apply from: "$rootDir/gradle/root/testing.gradle"
apply from: "$rootDir/gradle/root/coverage.gradle"
apply from: "$rootDir/gradle/root/fatJars.gradle"
apply from: "$rootDir/gradle/root/publishing.gradle" // Creates pubs for artifacts created in fatJars.gradle
apply from: "$rootDir/gradle/root/sonarqube.gradle"
apply from: "$rootDir/gradle/root/license.gradle"

apply from: "$rootDir/gradle/any/coverage.gradle"    // Modifies Test task from root/testing.gradle and
                                                     // JacocoReport task from root/coverage.gradle
apply from: "$rootDir/gradle/any/archiving.gradle"   // Modifies Jar tasks created in fatJars.gradle
apply from: "$rootDir/gradle/any/publishing.gradle"  // Modifies pubs created in root/publishing.gradle
