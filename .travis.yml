language: java
sudo: false

addons:
  artifacts:
    bucket: unidata-tds-tests
    paths:
      - $TRAVIS_UPLOAD_PATH
    target_paths: Travis/$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER
    sonarqube: true

jdk:
  - oraclejdk8

env:
  global:
    # Must specify libnetcdf location this way; the 'jna.library.path' system property does not work.
    # I believe it's because JNA is smart enough to find libnetcdf using that prop, but then libhdf5 is required.
    # That dependency is searched for by the *OS*, not by JNA, and it knows nothing about 'jna.library.path'.
    # Ordinarily, this wouldn't be a problem because libnetcdf would include an rpath reference to libhdf5, but the
    # binaries were built on a different system than the Travis VMs, so it doesn't work.
    - LD_LIBRARY_PATH=${TRAVIS_BUILD_DIR}/travis/lib/ubuntu-12.04.5-amd64
    # define SONAR_TOKEN
    - secure: r59iEQuNVKa+ntx7PfkrLRi6PvGU6LqYNgtWgiWFAQPVLA2ctE2E8CeRY6/VB4MK/Q/fYgMmqPINihWFb0F8KiVi0jo43BpjBcknV6lGPClqpzYMD7XJAEG9hmphEwncVuyOlQmUpV+oEK8hRilVFOjZzx7OvjbdJ+QSqlXmPkw=

  matrix:
    - TASK="build"
    - TASK="docs"
    - TASK="sonarqube"

before_install:
  - if [[ $TASK == "docs" ]]; then
      gem install asciidoctor coderay;
    fi

# Skip the installation step entirely; we don't need it for Gradle builds.
# https://docs.travis-ci.com/user/customizing-the-build#Skipping-the-Installation-Step
install: true

script:
  # When processing this block, Travis seems to merge all of the lines into one big line before passing it on to the
  # shell. Thus, to separate commands, we must end each with a semicolon. In a normal script semicolons are optional.
  # TODO: Move all of this to a separate script in the travis/ directory and simply call it from here.

  # If we need to do an IDV build, run the script
  - if [[ $TASK == "build_idv" ]]; then
      travis/build_idv.sh;
    elif [[ $TASK == "sonarqube" ]]; then
       export SONAR_SCANNER_HOME=${TRAVIS_BUILD_DIR}/travis/sonar-scanner;
       chmod u+x ${SONAR_SCANNER_HOME}/bin/sonar-scanner;
       ${SONAR_SCANNER_HOME}/bin/sonar-scanner -Dsonar.login=$SONAR_TOKEN;
    elif [[ $TASK == "docs" ]]; then
      echo Building docs;
      cd docs/website;
      ./adoc2html.sh 2> build.log;
      if [ -s build.log ]; then
        echo Doc build produced errors:;
        cat build.log;
        false;
      fi;
    else
      echo If available, test report at;
      echo http://unidata-tds-tests.s3.amazonaws.com/Travis/${TRAVIS_BRANCH}-${TRAVIS_BUILD_NUMBER}/${TRAVIS_JOB_NUMBER}/index.html;

      CONTENT_ROOT="-Dtds.content.root.path=$TRAVIS_BUILD_DIR/tds/src/test/content";
      DOWNLOAD_DIR="-Dtds.download.dir=/tmp/download";
      SYSTEM_PROPS="$CONTENT_ROOT $DOWNLOAD_DIR";

      ./gradlew $SYSTEM_PROPS --info --stacktrace testAll;
    fi


# See https://docs.travis-ci.com/user/languages/java/#Caching
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
