language: java

# Previously, we were seeing a failure in :it:appBeforeIntegrationTest:
#     Process 'command '/usr/lib/jvm/java-8-oracle/bin/java'' finished with non-zero exit value 137
#     No output has been received in the last 10 minutes, this potentially indicates a stalled build or
#     something wrong with the build itself. The build has been terminated.
# This thread indicates that running the job on Travis's container-based infrastructure may be causing resource issues:
#     https://github.com/travis-ci/travis-ci/issues/5582
# Setting sudo to "true" forces the job to run on Travis's standard infrastructure, which seems to fix the problem.
sudo: true

env:
  global:
    # Must specify libnetcdf location this way; the 'jna.library.path' system property does not work.
    # I believe it's because JNA is smart enough to find libnetcdf using that prop, but then libhdf5 is required.
    # That dependency is searched for by the *OS*, not by JNA, and it knows nothing about 'jna.library.path'.
    # Ordinarily, this wouldn't be a problem because libnetcdf would include an rpath reference to libhdf5, but the
    # binaries were built on a different system than the Travis VMs, so it doesn't work.
    - LD_LIBRARY_PATH="$TRAVIS_BUILD_DIR/travis/lib/ubuntu-12.04.5-amd64"

    # For artifact upload. It's important to use relative paths here; otherwise, the entire absolute path would
    # become part of the S3 URL.
    - TEST_REPORT_DIR="build/reports/allTests"
    - TDS_LOGS_DIR="tds/src/test/content/thredds/logs"
  matrix:
    - TASK="build"
    - TASK="docs"

addons:
  # See the note in travis/after_script.sh about the environment variables that Travis artifact uploading requires.
  artifacts:
    bucket: unidata-tds
    paths:
      - $TEST_REPORT_DIR
      - $TDS_LOGS_DIR
    target_paths: Travis/$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER

jdk:
  - oraclejdk8

before_install:
  - if [[ $TASK == "docs" ]]; then
      gem install asciidoctor coderay;
    fi

# Skip the installation step entirely; we don't need it for Gradle builds.
# https://docs.travis-ci.com/user/customizing-the-build#Skipping-the-Installation-Step
install: true

script:
  - travis/script.sh

after_script:
  - travis/after_script.sh

# See https://docs.travis-ci.com/user/languages/java/#Caching
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
